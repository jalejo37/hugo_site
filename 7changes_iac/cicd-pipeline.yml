---
trigger:
  branches:
    include:
      - refs/heads/main
name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
variables:
  - name: cloudid
    value: "mas11"
  - name: storage.account
    value: "sta$(System.StageName)ce04$(cloudid)"
stages:
  - stage: build
    displayName: "build"
    pool:
      vmImage: windows-latest
    jobs:
      - template: templates/jobs/shift_left.yaml
        parameters:
          PythonVersion: 3.10
          workingDirectory: "tests/ci"
          name: "shift_left"
      - job: artifact
        displayName: Create hugo artifacts
        dependsOn: shift_left
        steps:
          - checkout: self
            submodules: true
            persistCredentials: true
            fetchDepth: 1
          - task: CmdLine@2
            displayName: Show the file structure
            enabled: false
            inputs:
              script: tree /f /a
          - task: giuliovdev.hugo-extension.hugo-build-task-v2.HugoTask@2
            displayName: 'Hugo generate '
            inputs:
              destination: public
              hugoVersion: 0.92.2
              extendedVersion: true
              buildDrafts: true
          - task: CmdLine@2
            displayName: Show the file structure for public
            enabled: false
            inputs:
              script: tree public /f /a
          - task: CopyFiles@2
            displayName: 'Copy public Files to: $(Build.ArtifactStagingDirectory)'
            inputs:
              Contents: '**/public/**'
              TargetFolder: $(Build.ArtifactStagingDirectory)
          - task: CopyFiles@2
            displayName: 'Copy ux Files to: $(Build.ArtifactStagingDirectory)'
            inputs:
              Contents: '**/tests/ux/**'
              TargetFolder: $(Build.ArtifactStagingDirectory)
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: drop'
          - template: templates/steps/azdo_git_tag.yaml
  - stage: dev
    displayName: "azure dev environment"
    dependsOn: build
    variables:
      - name: storage.url
        value: "https://$(storage.account).z16.web.core.windows.net/"
    pool:
      vmImage: windows-latest
    jobs:
      - job: deploy
        steps:
          - checkout: none
          - task: CmdLine@2
            displayName: Show me the environment
            inputs:
              script: |
                echo I am $(System.StageName)
                echo I am using $(cloudid)
                echo I will deploy to $(storage.account)
                echo I will test against $(storage.url)
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              targetPath: '$(Pipeline.Workspace)'
          - script: 'tree /f /a'
            workingDirectory: '$(Pipeline.Workspace)/public'
            displayName: 'List public'
          - task: AzureFileCopy@3
            displayName: 'AzureBlob File Copy'
            inputs:
              SourcePath: '$(Pipeline.Workspace)/public'
              azureSubscription: 'ce04-Azure-Terraform-dev'
              Destination: AzureBlob
              storage: '$(storage.account)'
              ContainerName: '$web'
              sasTokenTimeOutInMinutes: 240
          - script: 'tree /f /a'
            workingDirectory: '$(Pipeline.Workspace)/tests/ux'
            displayName: 'List tests'
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.10'
            inputs:
              versionSpec: 3.10
          - script: |
              pip install -r requirements.txt
              pytest -v --url $(storage.url) --headless=yes --junitxml=TEST-selenium.xml
            workingDirectory: '$(Pipeline.Workspace)/tests/ux'
            displayName: 'UX Testing'
          - task: PublishTestResults@2
            displayName: 'Publish Test Results **/TEST-*.xml'
            inputs:
              searchFolder: '$(Pipeline.Workspace)/tests/ux'
              failTaskOnFailedTests: true
            condition: always()
  - stage: test
    displayName: "azure test environment"
    dependsOn: dev
    variables:
      - name: storage.url
        value: "https://$(storage.account).z16.web.core.windows.net/"
    pool:
      vmImage: windows-latest
    jobs:
      - job: deploy
        steps:
          - checkout: none
          - task: CmdLine@2
            displayName: Show me the environment
            inputs:
              script: |
                echo I am $(System.StageName)
                echo I am using $(cloudid)
                echo I will deploy to $(storage.account)
                echo I will test against $(storage.url)
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              targetPath: '$(Pipeline.Workspace)'
          - script: 'tree /f /a'
            workingDirectory: '$(Pipeline.Workspace)/public'
            displayName: 'List public'
          - task: AzureFileCopy@3
            displayName: 'AzureBlob File Copy'
            inputs:
              SourcePath: '$(Pipeline.Workspace)/public'
              azureSubscription: 'ce04-Azure-Terraform-test'
              Destination: AzureBlob
              storage: '$(storage.account)'
              ContainerName: '$web'
              sasTokenTimeOutInMinutes: 240
          - script: 'tree /f /a'
            workingDirectory: '$(Pipeline.Workspace)/tests/ux'
            displayName: 'List tests'
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.10'
            inputs:
              versionSpec: 3.10
          - script: |
              pip install -r requirements.txt
              pytest -v --url $(storage.url) --headless=yes --junitxml=TEST-selenium.xml
            workingDirectory: '$(Pipeline.Workspace)/tests/ux'
            displayName: 'UX Testing'
          - task: PublishTestResults@2
            displayName: 'Publish Test Results **/TEST-*.xml'
            inputs:
              searchFolder: '$(Pipeline.Workspace)/tests/ux'
              failTaskOnFailedTests: true
            condition: always()
  - stage: prod
    displayName: "azure prod environment"
    dependsOn: test
    variables:
      - name: storage.url
        value: "https://$(storage.account).z16.web.core.windows.net/"
    pool:
      vmImage: windows-latest
    jobs:
      - job: deploy
        steps:
          - checkout: none
          - task: CmdLine@2
            displayName: Show me the environment
            inputs:
              script: |
                echo I am $(System.StageName)
                echo I am using $(cloudid)
                echo I will deploy to $(storage.account)
                echo I will test against $(storage.url)
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              targetPath: '$(Pipeline.Workspace)'
          - script: 'tree /f /a'
            workingDirectory: '$(Pipeline.Workspace)/public'
            displayName: 'List public'
          - task: AzureFileCopy@3
            displayName: 'AzureBlob File Copy'
            inputs:
              SourcePath: '$(Pipeline.Workspace)/public'
              azureSubscription: 'ce04-Azure-Terraform-prod'
              Destination: AzureBlob
              storage: '$(storage.account)'
              ContainerName: '$web'
              sasTokenTimeOutInMinutes: 240
          - script: 'tree /f /a'
            workingDirectory: '$(Pipeline.Workspace)/tests/ux'
            displayName: 'List tests'
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.10'
            inputs:
              versionSpec: 3.10
          - script: |
              pip install -r requirements.txt
              pytest -v --url $(storage.url) --headless=yes --junitxml=TEST-selenium.xml
            workingDirectory: '$(Pipeline.Workspace)/tests/ux'
            displayName: 'UX Testing'
          - task: PublishTestResults@2
            displayName: 'Publish Test Results **/TEST-*.xml'
            inputs:
              searchFolder: '$(Pipeline.Workspace)/tests/ux'
              failTaskOnFailedTests: true
            condition: always()
...
